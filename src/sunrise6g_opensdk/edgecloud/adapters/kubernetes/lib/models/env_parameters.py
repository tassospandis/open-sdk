from __future__ import absolute_import

from sunrise6g_opensdk.edgecloud.adapters.kubernetes.lib import (
    util,
)
from sunrise6g_opensdk.edgecloud.adapters.kubernetes.lib.models.base_model_ import (
    Model,
)


class EnvParameters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, name: str = None, value: str = None, value_ref: str = None
    ):  # noqa: E501
        """EnvParameters - a model defined in Swagger

        :param name: The name of this EnvParameters.  # noqa: E501
        :type name: str
        :param value: The value of this EnvParameters.  # noqa: E501
        :type value: str
        :param value_ref: The value_ref of this EnvParameters.  # noqa: E501
        :type value_ref: str
        """
        self.swagger_types = {"name": str, "value": str, "value_ref": str}

        self.attribute_map = {
            "name": "name",
            "value": "value",
            "value_ref": "value_ref",
        }
        self._name = name
        self._value = value
        self._value_ref = value_ref

    @classmethod
    def from_dict(cls, dikt) -> "EnvParameters":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The env_parameters of this EnvParameters.  # noqa: E501
        :rtype: EnvParameters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this EnvParameters.


        :return: The name of this EnvParameters.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this EnvParameters.


        :param name: The name of this EnvParameters.
        :type name: str
        """

        self._name = name

    @property
    def value(self) -> str:
        """Gets the value of this EnvParameters.


        :return: The value of this EnvParameters.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this EnvParameters.


        :param value: The value of this EnvParameters.
        :type value: str
        """

        self._value = value

    @property
    def value_ref(self) -> str:
        """Gets the value_ref of this EnvParameters.


        :return: The value_ref of this EnvParameters.
        :rtype: str
        """
        return self._value_ref

    @value_ref.setter
    def value_ref(self, value_ref: str):
        """Sets the value_ref of this EnvParameters.


        :param value_ref: The value_ref of this EnvParameters.
        :type value_ref: str
        """

        self._value_ref = value_ref
